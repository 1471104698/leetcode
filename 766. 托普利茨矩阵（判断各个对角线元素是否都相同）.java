如果一个矩阵的每一方向由左上到右下的对角线上具有相同元素，那么这个矩阵是托普利茨矩阵。

给定一个 M x N 的矩阵，当且仅当它是托普利茨矩阵时返回 True。

示例 1:

输入: 
matrix = [
  [1,2,3,4],
  [5,1,2,3],
  [9,5,1,2]
]
输出: True
解释:
在上述矩阵中, 其对角线为:
"[9]", "[5, 5]", "[1, 1, 1]", "[2, 2, 2]", "[3, 3]", "[4]"。
各条对角线上的所有元素均相同, 因此答案是True。
示例 2:

输入:
matrix = [
  [1,2],
  [2,2]
]
输出: False
解释: 
对角线"[1, 2]"上的元素不同。

/*
进阶:
如果矩阵存储在磁盘上，并且磁盘内存是有限的，因此一次最多只能将一行矩阵加载到内存中，该怎么办？
如果矩阵太大以至于只能一次将部分行加载到内存中，该怎么办？
*/


class Solution {
    public boolean isToeplitzMatrix(int[][] matrix) {
        int rlen = matrix.length;
        int llen = matrix[0].length;
        
        /*
        上一行去掉最后的元素和下一行去掉最开始的元素后相等
        只需要判断 [i, j] 位置是否与 [i - 1, j - 1] 位置元素相同，因为这两个点就是对角线关系
        */
        for(int i = 1; i < rlen; i++){
            for(int j = 1; j < llen; j++){
                if(matrix[i][j] != matrix[i - 1][j - 1]){
                    return false;
                }
            }
        }
        return true;
    }
}

//回答进阶问题 1：
//每次存储 上一行 pre ,然后跟下一行 cur 进行比较，因为我们只需要比较的是相邻两行的元素而已，因此只要存在上一行和下一行数组即可
