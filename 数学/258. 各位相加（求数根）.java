
给定一个非负整数 num，反复将各个位上的数字相加，直到结果为一位数。

示例:

输入: 38
输出: 2 
解释: 各位相加的过程为：3 + 8 = 11, 1 + 1 = 2。 由于 2 是一位数，所以返回 2。
进阶:
你可以不使用循环或者递归，且在 O(1) 时间复杂度内解决这个问题吗？

/*
思路①、使用 while 循环直接求
*/

/*
思路②、找规律
*/
class Solution {
    public int addDigits(int num) {
        /*
            0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20
            0   1   2   3   4   5   6   7   8   9   1   2   3   4   5   6   7   8   9   1   2
        */
        if(num == 0){
            return 0;
        }
        if(num % 9 == 0){
            return 9;
        }else{
            return num % 9;
        }
    }
}